variables:
  GIT_SUBMODULE_STRATEGY: "recursive"
  CMAKE_BUILD_TYPE: "Debug"
  CC: "/usr/bin/gcc-9"
  CXX: "/usr/bin/g++-9"
  GCOV: "/usr/bin/gcov-9"

stages:
  - build
  - test
  - codecoverage

image:
  name: gitlab.cachegrand.dev:5050/cachegrand/cachegrand-server/ubuntu-2004-gcc:latest

build_ubuntu2004_x64_gcc9_debug:
  stage: build
  script:
    - cmake -B build -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE} -DUSE_HASHTABLE_HASH_ALGORITHM_T1HA2=1 -DBUILD_TESTS=1 -DBUILD_INTERNAL_BENCHES=1
    - cmake --build build -- -j $(nproc)
  artifacts:
    paths:
      - build
  tags:
    - ubuntu-2004
    - x64

test_ubuntu2004_x64_gcc9_debug:
  stage: test
  needs: [build_ubuntu2004_x64_gcc9_debug]
  script:
    - build/tests/cachegrand-tests -r junit -o report.xml -s
  artifacts:
    paths:
      - build
    reports:
      junit: report.xml
  tags:
    - ubuntu-2004
    - x64

codecoverage_ubuntu2004_x64_gcc9_debug:
  stage: codecoverage
  needs: [test_ubuntu2004_x64_gcc9_debug]
  variables:
    INPUT_REMOVE_PATTERNS: "3rdparty,tests,build/_deps"
    INPUT_OUTPUT_LCOV_INFO: "build/coverage.info"
  script:
    - chmod +x tools/docker/build/code-coverage.sh
    - INPUT_GCOV_PATH="${GCOV}" tools/docker/build/code-coverage.sh
    - bash <(curl -s https://codecov.io/bash) -X gcov -Z -f coverage.info
  artifacts:
    paths:
      - build/coverage.info
  tags:
    - ubuntu-2004
    - x64
